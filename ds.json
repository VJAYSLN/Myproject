{"_id":{"$oid":"5b851bf66f591f12c8021a16"},"q_name":"Rotate Image","q_desc":"  You are given an n x n 2D matrix that represents an image. Rotate the image by 90 degrees (clockwise)                                 For  a = [[1, 2, 3],      [4, 5, 6],      [7, 8, 9]] the output should be  rotateImage(a) =     [[7, 4, 1],      [8, 5, 2],      [9, 6, 3]]Note: Try to solve this task in-place (with O(1) additional memory), since this is what you'll be asked to do during an interview.","q_const":"Guaranteed constraints:                           1 ≤ a.length ≤ 100, a[i].length = a.length, 1 ≤ a[i][j] ≤ 104.","q_inp":"1 2 3 4 5 6 7 8 9","q_oup":"7 4 1 8 5 2 9 6 3","test_id":"t_Rotate Image"}
{"_id":{"$oid":"5b851b396f591f12c8021a15"},"q_name":"First Not Repeating Character","q_desc":"Given a string s, find and return the first instance of a non-repeating character in it. If there is no such character, return '_'.For s = \"abacabad\", the output should be firstNotRepeatingCharacter(s) = 'c'.  There are 2 non-repeating characters in the string: 'c' and 'd'. Return c since it appears in the string first.  For s = \"abacabaabacaba\", the output should be firstNotRepeatingCharacter(s) = '_'.  There are no characters in this string that do not repeat.Note: Write a solution that only iterates over the string once and uses O(1) additional memory, since this is what you would be asked to do during a real interview.  ","q_const":"       Guaranteed constraints: 1 ≤ s.length ≤ 105.","q_inp":"abacabad","q_oup":"c","test_id":"t_First Not Repeating Character"}
